================
README
================

doit - A task execution tool (build-tool)
=========================================

doit is a build tool that focus not only on making/building things but on executing any kind of tasks in an efficient way. Designed to be easy to use and "get out of your way".

doit like most build tools is used to execute tasks defined in a configuration file. Configuration files are python modules. The tasks can be python functions (or any callable) or an external shell script. doit automatically keeps track of declared dependencies executing only tasks that needs to be update (based on which dependencies have changed).

In doit, unlike most(all?) build-tools, a task doesn't need to define a target file to use the execute only if not up-to-date feature. This make doit specially suitable for running test suites.

doit can be used to perform any task or build anything, though it doesn't support automatic dependency discovery for any language.

Author
======

Eduardo Schettino
email: schettino72 at gmail dot com

Project Details
===============

 - Project management on `launchpad <https://launchpad.net/doit>`_
 - Website http://python-doit.sourceforge.net/
 - `Discussion group <http://groups.google.co.in/group/python-doit>`_


INSTALL
=======

``python setup.py install``


DEPENDENCIES
============

There are no external dependencies to install and use doit.

Tools required for developement:

- nose * unit tests
- bazaar * VCS
- epydoc * API doc generator
- sphinx * doc tool


TESTS
=====

`nose <http://somethingaboutorange.com/mrl/projects/nose/>`_ is required to run the test suite.

``nosetests``

DOCUMENTATION
=============

``doc`` folder contains ReST documentation. They are the base for creating the website.
To create it (after installing doit):

``doit -f website.py``

It includes epydoc generated API documentation.


LICENSE
=======

The MIT License
Copyright (c) 2008 Eduardo Naufel Schettino

see LICENSE file
